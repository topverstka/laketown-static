.input-select {
  position: relative;
  &__input {
    position: relative;
    height: 60px;
    border-radius: 30px;
    border: 1px solid $lightGrayText;
    padding: 0 17px;
    display: flex;
    align-items: center;

    input {
      width: 100%;
      background: transparent;
      border: none;
      outline: none;
      margin-right: 40px;
      cursor: pointer;
      box-sizing: border-box;
    }
    .arrow {
      position: absolute;
      right: 17px;
      top: 50%;
      transform: translateY(-50%);
      border: 1px solid #D9D9D9;
      @include borderRadius(50%);
      width: 20px;
      height: 20px;
      @include centerAll;
      background: #D9D9D9;
      cursor: pointer;
      @include transition(all, .5s);
      svg {
        @include transition(all, .5s);
      }
    }
  }
  &__dropdown {
    max-height: 0;
    z-index: 3;
    width: inherit;
    position: absolute;
    background: $colorBgr;
    @include transition(all, .5s);
    border-bottom-left-radius: 30px;
    border-bottom-right-radius: 30px;
    overflow:hidden;
    right: 0;
    left: 0;

    .dropdown-item {
      height: 0;
      border-bottom: 1px solid $lightGrayText;
      padding: 0 17px;
      display: flex;
      align-items: center;
      cursor: pointer;
      @include transition(all, .5s);

      &:hover {
        background: $orangeMain;
        color: $colorBgr;
      }
      &:last-child {
        border-bottom: 0;
      }
    }


  }
  &.active {
    .input-select__input {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
      border-color: $orangeMain;
      .arrow {
        background: $orangeMain;
        svg {
          transform: rotate(180deg);
          path {
            fill: $colorBgr;
          }
        }
      }
    }
    .input-select__dropdown {
      border: 1px solid $borderGray;
      max-height: fit-content;
      .dropdown-item {
        height: 60px;
      }
    }
  }
}

.input-text {
  display: flex;
  flex-direction: column;
  margin-bottom: 40px;
  box-sizing: border-box;
  label {
    font-family: var(--font-main);
    font-size: 14px;
    margin-bottom: 16px;
    color: #383838b3;
    box-sizing: border-box;
  }
  input {
    width: 100%;
    background: transparent;
    outline: 0;
    border: 0;
    border-bottom: 1px solid $mainDark;
    padding-bottom: 20px;
    font-size: 18px;
    box-sizing: border-box;
  }
}
.input-textarea {
  display: flex;
  flex-direction: column;
  margin-bottom: 40px;
  box-sizing: border-box;
  label {
    font-family: var(--font-main);
    font-size: 14px;
    margin-bottom: 16px;
    color: #383838b3;
    box-sizing: border-box;
  }
  textarea {
    // min-height: 40px;
    width: 100%;
    background: transparent;
    outline: 0;
    border: 0;
    border-bottom: 1px solid $mainDark;
    padding-bottom: 20px;
    font-size: 18px;
    box-sizing: border-box;
  }
}
.input-checkbox {
  display: flex;
  flex-direction: row;
  margin-bottom: 40px;
  label {
    order: 1;
    font-family: var(--font-main);
    font-size: 18px;
    color: #383838;
    display: inline-flex;
    align-items: center;
    user-select: none;
    &::before {
      content: '';
      display: inline-block;
      width: 1em;
      height: 1em;
      flex-shrink: 0;
      flex-grow: 0;
      border: 1px solid $mainDark;
      border-radius: 0.25em;
      margin-right: 0.5em;
      background-repeat: no-repeat;
      background-position: center center;
      background-size: 50% 50%;
    }
    @media (max-width: $phone) {
      align-items: flex-start;
    }
  }
  input {
    position: absolute;
    z-index: -1;
    opacity: 0;

    &:checked + label::before {
      border-color: $orangeMain;
      background-color: $orangeMain;
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e");

    }
  }
}

.input--inited.is-invalid input,
.input--inited.is-invalid input::placeholder,
.input--inited.is-invalid textarea,
.input--inited.is-invalid textarea::placeholder,
.input--inited.is-invalid label {
  color: $colorError;
  border-bottom-color: $colorError;
}